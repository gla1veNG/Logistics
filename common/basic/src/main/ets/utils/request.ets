import axios, { AxiosError, AxiosResponse, InternalAxiosRequestConfig } from '@ohos/axios';

const service = axios.create({
  baseURL: "",
  timeout: 10000
})

// 添加请求拦截器
service.interceptors.request.use((config: InternalAxiosRequestConfig) => {
  return config;
}, (error: AxiosError) => {

  return Promise.reject(error);
});


service.interceptors.response.use((response: AxiosResponse) => {

  return response;
}, (error: AxiosError) => {
  return Promise.reject(error);
});

class Htttp {
  get<T>(url: string, params?: object) {
    return service.get<null, T>(url, { params })
  }

  post<T>(url: string, data?: object) {
    return service.post<null, T>(url, data)

  }

  put<T>(url: string, data?: object) {
    return service.put<null, T>(url, data)

  }

  delete<T>(url: string, data?: object) {
    return service.delete<null, T>(url, data)

  }
}

export { Htttp }